"""Add cascade delete to reviews

Revision ID: 8932831859ce
Revises: 
Create Date: 2025-10-15 12:50:11.416824

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8932831859ce'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_orders_razorpay_order_id'), table_name='orders', if_exists=True)
    op.drop_index(op.f('idx_orders_razorpay_payment_id'), table_name='orders', if_exists=True)
    op.drop_index(op.f('idx_orders_session_id'), table_name='orders', if_exists=True)
    op.create_index(op.f('ix_orders_session_id'), 'orders', ['session_id'], unique=False)
    op.alter_column('products', 'vendor_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('products', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('products', 'sku',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('products', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('products', 'specifications',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('products', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('products', 'dimensions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('products', 'tags',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.execute("ALTER TABLE products ALTER COLUMN status DROP DEFAULT")
    op.execute("ALTER TABLE products ALTER COLUMN status TYPE productstatus USING status::productstatus")
    op.execute("ALTER TABLE products ALTER COLUMN status SET DEFAULT 'ACTIVE'")
    op.alter_column('products', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_index(op.f('ix_products_product_id'), table_name='products')
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_index(op.f('ix_products_slug'), 'products', ['slug'], unique=True)
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['id'])
    op.create_foreign_key(None, 'products', 'vendors', ['vendor_id'], ['id'])
    op.drop_column('products', 'category')
    op.drop_column('products', 'dosage')
    op.drop_column('products', 'product_id')
    op.drop_column('products', 'tagline')
    op.drop_column('products', 'image_url')
    op.drop_column('products', 'type')
    op.drop_column('products', 'old_mrp')
    op.drop_column('products', 'mrp')
    op.drop_column('products', 'packing')
    op.drop_constraint(op.f('reviews_product_id_fkey'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('idx_session_cart_session_id'), table_name='session_cart')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_session_cart_session_id'), 'session_cart', ['session_id'], unique=False)
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('reviews_product_id_fkey'), 'reviews', 'products', ['product_id'], ['id'])
    op.add_column('products', sa.Column('packing', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('mrp', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('old_mrp', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('tagline', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('product_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('dosage', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_index(op.f('ix_products_slug'), table_name='products')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.create_index(op.f('ix_products_product_id'), 'products', ['product_id'], unique=True)
    op.alter_column('products', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('products', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'status',
               existing_type=sa.Enum('ACTIVE', 'INACTIVE', 'OUT_OF_STOCK', 'DISCONTINUED', name='productstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.alter_column('products', 'tags',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('products', 'dimensions',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('products', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('products', 'specifications',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('products', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('products', 'sku',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('products', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('products', 'vendor_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_orders_session_id'), table_name='orders')
    op.create_index(op.f('idx_orders_session_id'), 'orders', ['session_id'], unique=False)
    op.create_index(op.f('idx_orders_razorpay_payment_id'), 'orders', ['razorpay_payment_id'], unique=False)
    op.create_index(op.f('idx_orders_razorpay_order_id'), 'orders', ['razorpay_order_id'], unique=False)
    # ### end Alembic commands ###
